<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 7.1.2">

    <issue
        id="ObsoleteLintCustomCheck"
        severity="Warning"
        message="Lint found an issue registry (`com.example.greenchecks.MyIssueRegistry`)&#xA;which did not specify the Lint API version it was compiled with.&#xA;&#xA;**This means that the lint checks are likely not compatible.**&#xA;&#xA;If you are the author of this lint check, make your lint&#xA;`IssueRegistry` class contain&#xA;  override val api: Int = com.android.tools.lint.detector.api.CURRENT_API&#xA;or from Java,&#xA;  @Override public int getApi() { return com.android.tools.lint.detector.api.ApiKt.CURRENT_API; }&#xA;&#xA;If you are just using lint checks from a third party library&#xA;you have no control over, you can disable these lint checks (if&#xA;they misbehave) like this:&#xA;&#xA;    android {&#xA;        lintOptions {&#xA;            disable &quot;BluetoothLowEnergy&quot;,&#xA;                    &quot;DarkUI&quot;,&#xA;                    &quot;DirtyBoot&quot;,&#xA;                    &quot;DurableWakeLock&quot;,&#xA;                    &quot;EverlastingService&quot;,&#xA;                    &quot;FusedLocationProvider&quot;,&#xA;                    &quot;InternetInTheLoop&quot;,&#xA;                    &quot;KeepCPUOn&quot;,&#xA;                    &quot;KeepScreenOn&quot;,&#xA;                    &quot;RigidAlarm&quot;,&#xA;                    &quot;SensorCoalesce&quot;,&#xA;                    &quot;SensorLeak&quot;,&#xA;                    &quot;UncompressedDataTransmission&quot;&#xA;        }&#xA;    }&#xA;"
        category="Lint"
        priority="10"
        summary="Obsolete custom lint check"
        explanation="Lint can be extended with &quot;custom checks&quot;: additional checks implemented by developers and libraries to for example enforce specific API usages required by a library or a company coding style guideline.&#xA;&#xA;The Lint APIs are not yet stable, so these checks may either cause a performance degradation, or stop working, or provide wrong results.&#xA;&#xA;This warning flags custom lint checks that are found to be using obsolete APIs and will need to be updated to run in the current lint environment.&#xA;&#xA;It may also flag issues found to be using a **newer** version of the API, meaning that you need to use a newer version of lint (or Android Studio or Gradle plugin etc) to work with these checks.">
        <location
            file="C:\Users\André\.android\lint\greenchecks.jar"/>
    </issue>

    <issue
        id="ApplySharedPref"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Use `apply()` on `SharedPreferences`"
        explanation="Consider using `apply()` instead of `commit` on shared preferences. Whereas `commit` blocks and writes its data to persistent storage immediately, `apply` will handle it in the background."
        errorLine1="                            PreferenceManager.getDefaultSharedPreferences(getContext()).edit().putString(&quot;uri&quot;, uriString).commit();"
        errorLine2="                                                                                                                           ~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\java\com\autismprime\krassesSpiel\SettingsActivity.java"
            line="84"
            column="124"/>
    </issue>

    <issue
        id="ApplySharedPref"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Use `apply()` on `SharedPreferences`"
        explanation="Consider using `apply()` instead of `commit` on shared preferences. Whereas `commit` blocks and writes its data to persistent storage immediately, `apply` will handle it in the background."
        errorLine1="                            shad.edit().putString(preference.getKey(),String.format(&quot;#%06X&quot;, (0xFFFFFF &amp; color))).commit();"
        errorLine2="                                                                                                                  ~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\java\com\autismprime\krassesSpiel\SettingsActivity.java"
            line="122"
            column="115"/>
    </issue>

    <issue
        id="ApplySharedPref"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Use `apply()` on `SharedPreferences`"
        explanation="Consider using `apply()` instead of `commit` on shared preferences. Whereas `commit` blocks and writes its data to persistent storage immediately, `apply` will handle it in the background."
        errorLine1="                    editor.commit();"
        errorLine2="                           ~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\java\com\autismprime\krassesSpiel\SettingsActivity.java"
            line="185"
            column="28"/>
    </issue>

    <issue
        id="InlinedApi"
        severity="Warning"
        message="Field requires API level 19 (current min is 16): `android.view.View#SYSTEM_UI_FLAG_IMMERSIVE_STICKY`"
        category="Correctness"
        priority="6"
        summary="Using inlined constants on older versions"
        explanation="This check scans through all the Android API field references in the application and flags certain constants, such as static final integers and Strings, which were introduced in later versions. These will actually be copied into the class files rather than being referenced, which means that the value is available even when running on older devices. In some cases that&apos;s fine, and in other cases it can result in a runtime crash or incorrect behavior. It depends on the context, so consider the code carefully and decide whether it&apos;s safe and can be suppressed or whether the code needs to be guarded.&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level."
        errorLine1="        setSystemUiVisibility(SYSTEM_UI_FLAG_FULLSCREEN|SYSTEM_UI_FLAG_IMMERSIVE_STICKY|SYSTEM_UI_FLAG_HIDE_NAVIGATION);"
        errorLine2="                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\java\com\autismprime\krassesSpiel\Lines.java"
            line="116"
            column="57"/>
    </issue>

    <issue
        id="InlinedApi"
        severity="Warning"
        message="Field requires API level 19 (current min is 16): `android.view.View#SYSTEM_UI_FLAG_IMMERSIVE_STICKY`"
        category="Correctness"
        priority="6"
        summary="Using inlined constants on older versions"
        explanation="This check scans through all the Android API field references in the application and flags certain constants, such as static final integers and Strings, which were introduced in later versions. These will actually be copied into the class files rather than being referenced, which means that the value is available even when running on older devices. In some cases that&apos;s fine, and in other cases it can result in a runtime crash or incorrect behavior. It depends on the context, so consider the code carefully and decide whether it&apos;s safe and can be suppressed or whether the code needs to be guarded.&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level."
        errorLine1="                View.SYSTEM_UI_FLAG_FULLSCREEN | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\java\com\autismprime\krassesSpiel\MainActivity.java"
            line="31"
            column="50"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.appcompat:appcompat than 1.3.1 is available: 1.5.0"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.appcompat:appcompat:1.3.1&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\build.gradle"
            line="36"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of com.google.android.material:material than 1.4.0 is available: 1.6.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;com.google.android.material:material:1.4.0&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\build.gradle"
            line="37"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.constraintlayout:constraintlayout than 2.0.4 is available: 2.1.4"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.constraintlayout:constraintlayout:2.0.4&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\build.gradle"
            line="38"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.preference:preference than 1.1.1 is available: 1.2.0"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.preference:preference:1.1.1&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\build.gradle"
            line="39"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.navigation:navigation-fragment than 2.3.5 is available: 2.5.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.navigation:navigation-fragment:2.3.5&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\build.gradle"
            line="40"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.navigation:navigation-ui than 2.3.5 is available: 2.5.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.navigation:navigation-ui:2.3.5&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\build.gradle"
            line="41"
            column="20"/>
    </issue>

    <issue
        id="GradleDynamicVersion"
        severity="Warning"
        message="Avoid using + in version numbers; can lead to unpredictable and unrepeatable builds (junit:junit:4.+)"
        category="Correctness"
        priority="4"
        summary="Gradle Dynamic Version"
        explanation="Using `+` in dependencies lets you automatically pick up the latest available version rather than a specific, named version. However, this is not recommended; your builds are not repeatable; you may have tested with a slightly different version than what the build server used. (Using a dynamic version as the major version number is more problematic than using it in the minor version position.)"
        errorLine1="    testImplementation &apos;junit:junit:4.+&apos;"
        errorLine2="                       ~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\build.gradle"
            line="42"
            column="24"/>
    </issue>

    <issue
        id="DrawAllocation"
        severity="Warning"
        message="Avoid object allocations during draw/layout operations (preallocate and reuse instead)"
        category="Performance"
        priority="9"
        summary="Memory allocations within drawing code"
        explanation="You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.&#xA;&#xA;The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.&#xA;&#xA;Some methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way."
        errorLine1="                bullets.set(i, new float[]{bullets.get(i)[0], (bullets.get(i)[1] + movVec)}); //manchmal scheinbar grundlos NULL-Pointer Exeption"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\java\com\autismprime\krassesSpiel\Lines.java"
            line="186"
            column="32"/>
    </issue>

    <issue
        id="DrawAllocation"
        severity="Warning"
        message="Avoid object allocations during draw/layout operations (preallocate and reuse instead)"
        category="Performance"
        priority="9"
        summary="Memory allocations within drawing code"
        explanation="You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.&#xA;&#xA;The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.&#xA;&#xA;Some methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way."
        errorLine1="            Random r = new Random();"
        errorLine2="                       ~~~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\java\com\autismprime\krassesSpiel\Lines.java"
            line="196"
            column="24"/>
    </issue>

    <issue
        id="DrawAllocation"
        severity="Warning"
        message="Avoid object allocations during draw/layout operations (preallocate and reuse instead)"
        category="Performance"
        priority="9"
        summary="Memory allocations within drawing code"
        explanation="You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.&#xA;&#xA;The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.&#xA;&#xA;Some methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way."
        errorLine1="                    sqrs.add(new int[]{r.nextInt((weit-weit/3)  + 1), r.nextInt((hoch/3*2-hoch/3)  + 1),r.nextInt(((weit/3-weit/8)  + 1)) + weit/8 ,r.nextInt(((hoch/4-hoch/10)  + 1)) + hoch/10});"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\java\com\autismprime\krassesSpiel\Lines.java"
            line="213"
            column="30"/>
    </issue>

    <issue
        id="DrawAllocation"
        severity="Warning"
        message="Avoid object allocations during draw/layout operations (preallocate and reuse instead)"
        category="Performance"
        priority="9"
        summary="Memory allocations within drawing code"
        explanation="You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.&#xA;&#xA;The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.&#xA;&#xA;Some methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way."
        errorLine1="                badBullets.set(i, new float[]{badBullets.get(i)[0], (badBullets.get(i)[1] - movVec / 2)});"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\java\com\autismprime\krassesSpiel\Lines.java"
            line="237"
            column="35"/>
    </issue>

    <issue
        id="DrawAllocation"
        severity="Warning"
        message="Avoid object allocations during draw/layout operations (preallocate and reuse instead)"
        category="Performance"
        priority="9"
        summary="Memory allocations within drawing code"
        explanation="You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.&#xA;&#xA;The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.&#xA;&#xA;Some methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way."
        errorLine1="            Shader shader=new RadialGradient(badBullets.get(i)[0],badBullets.get(i)[1],color_radius, new int[]{badBulletsColor, bbOutColor},null, Shader.TileMode.REPEAT);"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\java\com\autismprime\krassesSpiel\Lines.java"
            line="245"
            column="27"/>
    </issue>

    <issue
        id="DrawAllocation"
        severity="Warning"
        message="Avoid object allocations during draw/layout operations (preallocate and reuse instead)"
        category="Performance"
        priority="9"
        summary="Memory allocations within drawing code"
        explanation="You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.&#xA;&#xA;The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.&#xA;&#xA;Some methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way."
        errorLine1="            Shader shader=new RadialGradient(badBullets.get(i)[0],badBullets.get(i)[1],color_radius, new int[]{badBulletsColor, bbOutColor},null, Shader.TileMode.REPEAT);"
        errorLine2="                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\java\com\autismprime\krassesSpiel\Lines.java"
            line="245"
            column="102"/>
    </issue>

    <issue
        id="DrawAllocation"
        severity="Warning"
        message="Avoid object allocations during draw/layout operations (preallocate and reuse instead)"
        category="Performance"
        priority="9"
        summary="Memory allocations within drawing code"
        explanation="You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.&#xA;&#xA;The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.&#xA;&#xA;Some methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way."
        errorLine1="            Path wallpath = new Path();"
        errorLine2="                            ~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\java\com\autismprime\krassesSpiel\Lines.java"
            line="273"
            column="29"/>
    </issue>

    <issue
        id="Recycle"
        severity="Warning"
        message="This `Cursor` should be freed up after use with `#close()`"
        category="Performance"
        priority="7"
        summary="Missing `recycle()` calls"
        explanation="Many resources, such as TypedArrays, VelocityTrackers, etc., should be recycled (with a `recycle()` call) after use. This lint check looks for missing `recycle()` calls."
        errorLine1="                cursor = context.getContentResolver().query(uri, projection, selection, selectionArgs, null);"
        errorLine2="                                                      ~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\java\com\autismprime\krassesSpiel\PathUtil.java"
            line="58"
            column="55"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (\u2026, &amp;#8230;). This can help make the text more readable."
        url="https://en.wikipedia.org/wiki/Ellipsis"
        urls="https://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="        &lt;item>choose...&lt;/item>"
        errorLine2="              ~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\res\values\arrays.xml"
            line="10"
            column="15"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/settings_icon_png.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="https://developer.android.com/guide/practices/screens_support.html"
        urls="https://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Github\krassesSpiel\app\src\main\res\drawable\settings_icon_png.png"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="    &lt;EditText android:id=&quot;@android:id/edit&quot;"
        errorLine2="     ~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\res\layout\preference_edit_text.xml"
            line="6"
            column="6"/>
    </issue>

    <issue
        id="ViewConstructor"
        severity="Warning"
        message="Custom view `Lines` is missing constructor used by tools: `(Context)` or `(Context,AttributeSet)` or `(Context,AttributeSet,int)`"
        category="Usability"
        priority="3"
        summary="Missing View constructors for XML inflation"
        explanation="Some layout tools (such as the Android layout editor) need to find a constructor with one of the following signatures:&#xA;* `View(Context context)`&#xA;* `View(Context context, AttributeSet attrs)`&#xA;* `View(Context context, AttributeSet attrs, int defStyle)`&#xA;&#xA;If your custom view needs to perform initialization which does not apply when used in a layout editor, you can surround the given code with a check to see if `View#isInEditMode()` is false, since that method will return `false` at runtime but true within a user interface editor."
        errorLine1="public class Lines extends SurfaceView implements View.OnTouchListener, SensorEventListener {"
        errorLine2="             ~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\java\com\autismprime\krassesSpiel\Lines.java"
            line="27"
            column="14"/>
    </issue>

    <issue
        id="LabelFor"
        severity="Warning"
        message="Missing accessibility label: where minSdk &lt; 17, you should provide an `android:hint`"
        category="Accessibility"
        priority="2"
        summary="Missing accessibility label"
        explanation="Editable text fields should provide an `android:hint` or, provided your `minSdkVersion` is at least 17, they may be referenced by a view with a `android:labelFor` attribute.&#xA;&#xA;When using `android:labelFor`, be sure to provide an `android:text` or an `android:contentDescription`.&#xA;&#xA;If your view is labeled but by a label in a different layout which includes this one, just suppress this warning from lint."
        errorLine1="    &lt;EditText android:id=&quot;@android:id/edit&quot;"
        errorLine2="     ~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\res\layout\preference_edit_text.xml"
            line="6"
            column="6"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;Motion&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Motion&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\res\layout\activity_main.xml"
            line="38"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;touch&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;touch&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\res\layout\activity_main.xml"
            line="49"
            column="13"/>
    </issue>

    <issue
        id="DarkUI"
        severity="Warning"
        message="Light theme should be avoided. Prefer darker themes."
        category="Greenness"
        priority="6"
        summary="Provide a UI with dark colors"
        explanation="Dark colors are particularly beneficial for mobile devices with AMOLED screens, which are more energy efficient when displaying"
        errorLine1="    &lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat.Light.DarkActionBar&quot;>"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\res\values\styles.xml"
            line="4"
            column="28"/>
    </issue>

    <issue
        id="DarkUI"
        severity="Warning"
        message="Light theme should be avoided. Prefer darker themes."
        category="Greenness"
        priority="6"
        summary="Provide a UI with dark colors"
        explanation="Dark colors are particularly beneficial for mobile devices with AMOLED screens, which are more energy efficient when displaying"
        errorLine1="  &lt;style name=&quot;AppTheme.PopupOverlay&quot; parent=&quot;ThemeOverlay.AppCompat.Light&quot; />"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\res\values\themes.xml"
            line="7"
            column="39"/>
    </issue>

    <issue
        id="SensorCoalesce"
        severity="Warning"
        message="Should use `registerListener(SensorEventListener, Sensor, int, int)` instead of `registerListener(SensorEventListener, Sensor, int)`"
        category="Greenness"
        priority="6"
        summary="Events should be kept temporarily before being delivered"
        explanation="The method registerListener(SensorEventListener, Sensor, int, int) allows eventsto be stored in the hardware queue (FIFO) up to maxReportLatencyUs. Setting maxReportLatencyUs to a positive value allows to reduce the number of interrupts the AP receives, hence reducing power consumption."
        url="https://developer.android.com/reference/android/hardware/SensorManager.html#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int,%20int)"
        urls="https://developer.android.com/reference/android/hardware/SensorManager.html#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int,%20int)"
        errorLine1="        man.registerListener(this,sen,SensorManager.SENSOR_DELAY_NORMAL);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\java\com\autismprime\krassesSpiel\Lines.java"
            line="90"
            column="9"/>
    </issue>

    <issue
        id="SensorLeak"
        severity="Error"
        message="The unregistration of this sensor is missing"
        category="Greenness"
        priority="6"
        summary="You did not unregister a sensor properly"
        explanation="Always make sure to disable sensors you don&apos;t need, especially when your activity is paused. Failing to do so can drain the battery in just a few hours. Note that the system will not disable sensors automatically when the screen turns off"
        url="https://developer.android.com/reference/android/hardware/SensorManager"
        urls="https://developer.android.com/reference/android/hardware/SensorManager"
        errorLine1="        man.registerListener(this,sen,SensorManager.SENSOR_DELAY_NORMAL);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\krassesSpiel\app\src\main\java\com\autismprime\krassesSpiel\Lines.java"
            line="90"
            column="9"/>
    </issue>

</issues>
