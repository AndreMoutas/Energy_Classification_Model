<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 7.2.1">

    <issue
        id="ObsoleteLintCustomCheck"
        severity="Warning"
        message="Lint found an issue registry (`com.example.greenchecks.MyIssueRegistry`)&#xA;which did not specify the Lint API version it was compiled with.&#xA;&#xA;**This means that the lint checks are likely not compatible.**&#xA;&#xA;If you are the author of this lint check, make your lint&#xA;`IssueRegistry` class contain&#xA;  override val api: Int = com.android.tools.lint.detector.api.CURRENT_API&#xA;or from Java,&#xA;  @Override public int getApi() { return com.android.tools.lint.detector.api.ApiKt.CURRENT_API; }&#xA;&#xA;If you are just using lint checks from a third party library&#xA;you have no control over, you can disable these lint checks (if&#xA;they misbehave) like this:&#xA;&#xA;    android {&#xA;        lintOptions {&#xA;            disable &quot;BluetoothLowEnergy&quot;,&#xA;                    &quot;DarkUI&quot;,&#xA;                    &quot;DirtyBoot&quot;,&#xA;                    &quot;DurableWakeLock&quot;,&#xA;                    &quot;EverlastingService&quot;,&#xA;                    &quot;FusedLocationProvider&quot;,&#xA;                    &quot;InternetInTheLoop&quot;,&#xA;                    &quot;KeepCPUOn&quot;,&#xA;                    &quot;KeepScreenOn&quot;,&#xA;                    &quot;RigidAlarm&quot;,&#xA;                    &quot;SensorCoalesce&quot;,&#xA;                    &quot;SensorLeak&quot;,&#xA;                    &quot;UncompressedDataTransmission&quot;&#xA;        }&#xA;    }&#xA;"
        category="Lint"
        priority="10"
        summary="Obsolete custom lint check"
        explanation="Lint can be extended with &quot;custom checks&quot;: additional checks implemented by developers and libraries to for example enforce specific API usages required by a library or a company coding style guideline.&#xA;&#xA;The Lint APIs are not yet stable, so these checks may either cause a performance degradation, or stop working, or provide wrong results.&#xA;&#xA;This warning flags custom lint checks that are found to be using obsolete APIs and will need to be updated to run in the current lint environment.&#xA;&#xA;It may also flag issues found to be using a **newer** version of the API, meaning that you need to use a newer version of lint (or Android Studio or Gradle plugin etc) to work with these checks.">
        <location
            file="C:\Users\André\.android\lint\greenchecks.jar"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toUpperCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="                getString(R.string.app_name).toUpperCase(),"
        errorLine2="                                             ~~~~~~~~~~~">
        <location
            file="C:\Github\randomix\app\src\main\java\com\minar\randomix\activities\IntroActivity.java"
            line="25"
            column="46"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toUpperCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="https://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="            String alphabet = &quot;a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z&quot;.toUpperCase();"
        errorLine2="                                                                                    ~~~~~~~~~~~">
        <location
            file="C:\Github\randomix\app\src\main\java\com\minar\randomix\fragments\RouletteBottomSheet.java"
            line="79"
            column="85"/>
    </issue>

    <issue
        id="LocaleFolder"
        severity="Warning"
        message="The locale folder &quot;`id`&quot; should be called &quot;`in`&quot; instead; see the `java.util.Locale` documentation"
        category="Correctness"
        priority="6"
        summary="Wrong locale name"
        explanation="From the `java.util.Locale` documentation:&#xA;&quot;Note that Java uses several deprecated two-letter codes. The Hebrew (&quot;he&quot;) language code is rewritten as &quot;iw&quot;, Indonesian (&quot;id&quot;) as &quot;in&quot;, and Yiddish (&quot;yi&quot;) as &quot;ji&quot;. This rewriting happens even if you construct your own Locale object, not just for instances returned by the various lookup methods.&#xA;&#xA;Because of this, if you add your localized resources in for example `values-he` they will not be used, since the system will look for `values-iw` instead.&#xA;&#xA;To work around this, place your resources in a `values` folder using the deprecated language code instead."
        url="https://developer.android.com/reference/java/util/Locale.html"
        urls="https://developer.android.com/reference/java/util/Locale.html">
        <location
            file="C:\Github\randomix\app\src\main\res\values-id"/>
    </issue>

    <issue
        id="OldTargetApi"
        severity="Warning"
        message="Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details."
        category="Correctness"
        priority="6"
        summary="Target SDK attribute is not targeting latest version"
        explanation="When your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.&#xA;&#xA;To fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: https://developer.android.com/reference/android/os/Build.VERSION_CODES.html as well as follow this guide:&#xA;https://developer.android.com/distribute/best-practices/develop/target-sdk.html"
        url="https://developer.android.com/distribute/best-practices/develop/target-sdk.html"
        urls="https://developer.android.com/distribute/best-practices/develop/target-sdk.html,https://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        errorLine1="        targetSdkVersion 32"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\randomix\app\build.gradle"
            line="8"
            column="9"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.navigation:navigation-fragment than 2.5.0 is available: 2.5.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &quot;androidx.navigation:navigation-fragment:2.5.0&quot;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\randomix\app\build.gradle"
            line="32"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.navigation:navigation-ui than 2.5.0 is available: 2.5.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &quot;androidx.navigation:navigation-ui:2.5.0&quot;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\randomix\app\build.gradle"
            line="33"
            column="20"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Warning"
        message="Very long vector path (3741 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)"
        errorLine1="      android:pathData=&quot;M11.1176,22.4676C9.1054,22.2054 7.4367,21.6037 5.8888,20.5298 5.1351,19.9431 4.4732,19.3034 3.8475,18.5921 3.3045,17.975 2.6503,16.8902 2.3172,16.0547 1.932,15.1495 1.73,14.1099 1.5978,13.3109 1.524,12.8653 1.516,11.2596 1.5851,10.7657 1.7173,9.8022 1.9263,8.913 2.2657,8.0411 2.6586,7.0824 3.1452,6.2645 3.7962,5.4445 4.621,4.4927 5.6091,3.6362 6.4211,3.0892 7.8189,2.1919 9.4162,1.7184 10.8738,1.5388c0.3707,-0.045 2.0112,-0.0382 2.396,0.01 1.4636,0.1832 2.7152,0.5788 3.7763,1.1937 1.4781,0.8177 2.8712,2.2655 3.7746,3.4769 0.6635,0.8964 1.3273,2.5465 1.5242,3.789 0.2212,1.6753 0.1174,3.5199 -0.2034,4.8945 -0.2694,0.9374 -0.7395,1.9483 -1.2146,2.6903 -0.7903,1.2279 -1.954,2.348 -3.0183,3.1126 -1.5159,0.9752 -2.8018,1.4577 -4.5221,1.7112 -0.4991,0.0716 -1.6708,0.0977 -2.2687,0.0505zM12.5594,21.0694c2.0434,-0.253 3.3286,-1.5335 3.5369,-3.524 0.0172,-0.1643 0.0172,-0.1643 -0.5806,-0.1643 -0.6766,0 -0.623,-0.0156 -0.6236,0.1818 -0.0027,0.7937 -0.9589,2.4253 -1.0324,1.7615 -0.1466,-1.3253 -1.5816,-1.9662 -2.6299,-1.1747 -0.4405,0.3326 -0.7131,0.9971 -0.6262,1.5267 0.0243,0.1479 0.0323,0.1474 -0.193,0.0106 -0.8909,-0.5411 -1.4037,-1.6413 -1.342,-2.879 0.0534,-1.0711 0.4813,-1.8212 1.4872,-2.6073 0.2511,-0.1962 0.6949,-0.5518 0.8216,-0.6582 0.0795,-0.0668 0.0795,-0.0668 0.0795,0.847 0,0.9138 0,0.9138 0.5725,0.9138 0.5725,0 0.5725,0 0.5728,-0.9807 0.0002,-0.5394 0.0084,-0.9933 0.0182,-1.0088 0.0215,-0.034 0.207,0.1723 0.6449,0.7173 1.3271,1.6517 2.0269,2.0449 3.6409,2.0457 2.6013,0.0012 4.1278,-1.4321 4.2127,-3.9557 0.0783,-2.3282 -1.5604,-4.2022 -3.6879,-4.2175 -0.0088,-0.0001 -0.0159,0.2706 -0.0159,0.6015 0,0.6718 -0.0147,0.6281 0.2119,0.6281 0.5722,0 1.3381,0.3548 1.7923,0.8302 0.1689,0.1768 0.1689,0.1768 -0.0587,0.2018 -1.3271,0.146 -1.9692,1.5807 -1.1769,2.63 0.3326,0.4405 0.9971,0.7131 1.5267,0.6262 0.0671,-0.011 0.1219,-0.0159 0.1219,-0.011 0,0.4867 -1.226,1.3378 -2.1415,1.4867 -1.5497,0.252 -2.4937,-0.1784 -3.6346,-1.6568 -0.1458,-0.189 -0.3266,-0.4151 -0.4019,-0.5026 -0.1367,-0.159 -0.1367,-0.159 0.7731,-0.1645 0.9098,-0.0055 0.9098,-0.0055 0.9098,-0.5778 0,-0.5723 0,-0.5723 -0.9807,-0.5726 -0.5394,-0.0002 -0.9928,-0.008 -1.0077,-0.0175 -0.032,-0.0203 0.1989,-0.2271 0.7327,-0.6563 1.6828,-1.3528 2.0726,-2.0825 2.0346,-3.8091 -0.0543,-2.4741 -1.4995,-3.9483 -3.9544,-4.0337 -2.3049,-0.0802 -3.9671,1.3209 -4.1992,3.5395 -0.0172,0.1643 -0.0172,0.1643 0.5806,0.1643 0.6766,0 0.623,0.0156 0.6236,-0.1818 0.0026,-0.7937 0.9589,-2.4253 1.0324,-1.7615 0.1466,1.3253 1.5816,1.9662 2.6299,1.1747 0.4405,-0.3326 0.7131,-0.9971 0.6262,-1.5267 -0.0237,-0.1449 -0.0303,-0.1432 0.1481,-0.0389 0.9173,0.536 1.4495,1.6518 1.3869,2.9073 -0.0534,1.0711 -0.4813,1.8212 -1.4872,2.6073 -0.2511,0.1962 -0.6949,0.5518 -0.8216,0.6582 -0.0795,0.0668 -0.0795,0.0668 -0.0795,-0.847 0,-0.9138 0,-0.9138 -0.5725,-0.9138 -0.5725,0 -0.5725,0 -0.5728,0.9806 -0.0002,0.5394 -0.008,0.9928 -0.0175,1.0077 -0.0203,0.032 -0.2271,-0.1989 -0.6563,-0.7327C9.4299,8.2607 8.7003,7.871 6.9736,7.9089 4.4934,7.9633 3.0158,9.4179 2.9407,11.8789c-0.0696,2.2807 1.282,3.9086 3.4645,4.1728 0.2385,0.0289 0.2385,0.0289 0.2385,-0.5694 0,-0.6772 0.0156,-0.6234 -0.1818,-0.6241 -0.7952,-0.0025 -2.4251,-0.959 -1.7599,-1.0326 2.1008,-0.2324 1.9506,-3.2614 -0.1618,-3.2614 -0.3118,0 -0.3118,0 -0.2465,-0.1166 0.5172,-0.9245 1.6583,-1.4761 2.9232,-1.413 1.0711,0.0534 1.8212,0.4813 2.6073,1.4872 0.1962,0.2511 0.5518,0.6949 0.6582,0.8216 0.0668,0.0795 0.0668,0.0795 -0.847,0.0795 -0.9138,0 -0.9138,0 -0.9138,0.5725 0,0.5725 0,0.5725 0.9806,0.5728 0.5394,0.0002 0.9928,0.008 1.0077,0.0175 0.032,0.0203 -0.1989,0.2271 -0.7327,0.6563 -1.683,1.3529 -2.0733,2.0838 -2.0343,3.8091 0.0476,2.1085 1.1051,3.4987 2.9838,3.9226 0.4619,0.1042 1.2095,0.148 1.6326,0.0956z&quot;"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\randomix\app\src\main\res\drawable\ic_randomix_24dp.xml"
            line="7"
            column="25"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Warning"
        message="Very long vector path (1272 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)"
        errorLine1="        android:pathData=&quot;M 10.862 1.76 C 8.894 1.987 7.096 2.784 5.628 3.967 L 4.035 5.571 C 2.784 7.085 1.999 8.928 1.76 10.862 L 1.76 13.138 C 1.999 15.049 2.784 16.847 4.035 18.326 L 5.617 19.965 C 7.119 21.182 8.928 21.978 10.862 22.24 L 13.138 22.24 C 15.061 21.978 16.881 21.182 18.372 19.965 L 19.965 18.338 C 21.216 16.858 22.001 15.049 22.24 13.138 L 22.24 10.862 C 22.001 8.928 21.216 7.096 19.965 5.583 L 18.383 3.967 C 16.881 2.75 15.061 1.987 13.138 1.76 M 10.862 4.035 L 10.862 7.449 L 9.724 8.018 L 7.233 5.571 C 8.268 4.798 9.508 4.229 10.862 4.035 M 13.138 4.035 C 14.458 4.24 15.709 4.764 16.779 5.571 L 14.276 8.018 L 13.138 7.449 L 13.138 4.035 M 5.628 7.176 L 8.018 9.724 L 7.449 10.862 L 4.035 10.862 C 4.217 9.542 4.832 8.245 5.617 7.164 L 5.628 7.176 M 18.372 7.176 C 19.202 8.257 19.748 9.52 19.965 10.862 L 16.551 10.862 L 15.982 9.724 L 18.383 7.176 L 18.372 7.176 M 4.035 13.138 L 7.449 13.138 L 8.097 14.276 L 5.617 16.722 C 4.798 15.686 4.252 14.458 4.035 13.138 M 16.551 13.138 L 19.965 13.138 C 19.748 14.446 19.202 15.686 18.383 16.733 L 15.982 14.276 L 16.551 13.138 M 9.724 15.982 L 10.862 16.551 L 10.862 19.965 C 9.531 19.737 8.279 19.179 7.221 18.338 L 9.724 15.982 M 14.276 15.982 L 16.767 18.338 C 15.732 19.111 14.492 19.771 13.138 19.965 L 13.138 16.551 Z&quot; />"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\randomix\app\src\main\res\drawable\ic_roulette_black_24dp.xml"
            line="10"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Warning"
        message="Very long vector path (806 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)"
        errorLine1="      android:pathData=&quot;m105.759,24.368q-2.031,0 -3.783,-0.736 -1.727,-0.736 -2.996,-2.006 -1.27,-1.295 -2.006,-3.022 -0.711,-1.752 -0.711,-3.732 0,-1.98 0.711,-3.707 0.736,-1.752 2.006,-3.022 1.27,-1.295 2.996,-2.031 1.752,-0.736 3.783,-0.736 2.031,0 3.758,0.736 1.752,0.736 3.022,2.031 1.27,1.27 1.98,3.022 0.736,1.727 0.736,3.707 0,1.98 -0.736,3.732 -0.711,1.727 -1.98,3.022 -1.27,1.27 -3.022,2.006 -1.727,0.736 -3.758,0.736zM105.759,21.118q1.27,0 2.361,-0.457 1.117,-0.457 1.93,-1.27 0.838,-0.813 1.295,-1.955 0.482,-1.168 0.482,-2.564 0,-1.396 -0.482,-2.539 -0.457,-1.168 -1.295,-1.98 -0.813,-0.813 -1.93,-1.27 -1.092,-0.457 -2.361,-0.457 -1.27,0 -2.387,0.457 -1.092,0.457 -1.93,1.27 -0.813,0.813 -1.295,1.98 -0.457,1.143 -0.457,2.539 0,1.396 0.457,2.564 0.482,1.143 1.295,1.955 0.838,0.813 1.93,1.27 1.117,0.457 2.387,0.457z&quot;/>"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Github\randomix\app\src\main\res\drawable\static_branding_image.xml"
            line="23"
            column="25"/>
    </issue>

    <issue
        id="DarkUI"
        severity="Warning"
        message="banner_minar.png is a too bright image"
        category="Greenness"
        priority="6"
        summary="Provide a UI with dark colors"
        explanation="Dark colors are particularly beneficial for mobile devices with AMOLED screens, which are more energy efficient when displaying">
        <location
            file="C:\Github\randomix\app\src\main\res\drawable-nodpi\banner_minar.png"/>
    </issue>

    <issue
        id="DarkUI"
        severity="Warning"
        message="intro_icon.png is a too bright image"
        category="Greenness"
        priority="6"
        summary="Provide a UI with dark colors"
        explanation="Dark colors are particularly beneficial for mobile devices with AMOLED screens, which are more energy efficient when displaying">
        <location
            file="C:\Github\randomix\app\src\main\res\drawable-nodpi\intro_icon.png"/>
    </issue>

    <issue
        id="SensorCoalesce"
        severity="Warning"
        message="Should use `registerListener(SensorEventListener, Sensor, int, int)` instead of `registerListener(SensorEventListener, Sensor, int)`"
        category="Greenness"
        priority="6"
        summary="Events should be kept temporarily before being delivered"
        explanation="The method registerListener(SensorEventListener, Sensor, int, int) allows eventsto be stored in the hardware queue (FIFO) up to maxReportLatencyUs. Setting maxReportLatencyUs to a positive value allows to reduce the number of interrupts the AP receives, hence reducing power consumption."
        url="https://developer.android.com/reference/android/hardware/SensorManager.html#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int,%20int)"
        urls="https://developer.android.com/reference/android/hardware/SensorManager.html#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int,%20int)"
        errorLine1="            sensorManager.registerListener(sensorListener,"
        errorLine2="            ^">
        <location
            file="C:\Github\randomix\app\src\main\java\com\minar\randomix\fragments\CoinFragment.java"
            line="41"
            column="13"/>
    </issue>

    <issue
        id="SensorCoalesce"
        severity="Warning"
        message="Should use `registerListener(SensorEventListener, Sensor, int, int)` instead of `registerListener(SensorEventListener, Sensor, int)`"
        category="Greenness"
        priority="6"
        summary="Events should be kept temporarily before being delivered"
        explanation="The method registerListener(SensorEventListener, Sensor, int, int) allows eventsto be stored in the hardware queue (FIFO) up to maxReportLatencyUs. Setting maxReportLatencyUs to a positive value allows to reduce the number of interrupts the AP receives, hence reducing power consumption."
        url="https://developer.android.com/reference/android/hardware/SensorManager.html#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int,%20int)"
        urls="https://developer.android.com/reference/android/hardware/SensorManager.html#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int,%20int)"
        errorLine1="            if (shakeEnabled) sensorManager.registerListener(sensorListener,"
        errorLine2="                              ^">
        <location
            file="C:\Github\randomix\app\src\main\java\com\minar\randomix\fragments\CoinFragment.java"
            line="111"
            column="31"/>
    </issue>

    <issue
        id="SensorCoalesce"
        severity="Warning"
        message="Should use `registerListener(SensorEventListener, Sensor, int, int)` instead of `registerListener(SensorEventListener, Sensor, int)`"
        category="Greenness"
        priority="6"
        summary="Events should be kept temporarily before being delivered"
        explanation="The method registerListener(SensorEventListener, Sensor, int, int) allows eventsto be stored in the hardware queue (FIFO) up to maxReportLatencyUs. Setting maxReportLatencyUs to a positive value allows to reduce the number of interrupts the AP receives, hence reducing power consumption."
        url="https://developer.android.com/reference/android/hardware/SensorManager.html#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int,%20int)"
        urls="https://developer.android.com/reference/android/hardware/SensorManager.html#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int,%20int)"
        errorLine1="            sensorManager.registerListener(sensorListener,"
        errorLine2="            ^">
        <location
            file="C:\Github\randomix\app\src\main\java\com\minar\randomix\fragments\DiceFragment.java"
            line="77"
            column="13"/>
    </issue>

    <issue
        id="SensorCoalesce"
        severity="Warning"
        message="Should use `registerListener(SensorEventListener, Sensor, int, int)` instead of `registerListener(SensorEventListener, Sensor, int)`"
        category="Greenness"
        priority="6"
        summary="Events should be kept temporarily before being delivered"
        explanation="The method registerListener(SensorEventListener, Sensor, int, int) allows eventsto be stored in the hardware queue (FIFO) up to maxReportLatencyUs. Setting maxReportLatencyUs to a positive value allows to reduce the number of interrupts the AP receives, hence reducing power consumption."
        url="https://developer.android.com/reference/android/hardware/SensorManager.html#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int,%20int)"
        urls="https://developer.android.com/reference/android/hardware/SensorManager.html#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int,%20int)"
        errorLine1="            if (shakeEnabled) sensorManager.registerListener(sensorListener,"
        errorLine2="                              ^">
        <location
            file="C:\Github\randomix\app\src\main\java\com\minar\randomix\fragments\DiceFragment.java"
            line="193"
            column="31"/>
    </issue>

    <issue
        id="SensorCoalesce"
        severity="Warning"
        message="Should use `registerListener(SensorEventListener, Sensor, int, int)` instead of `registerListener(SensorEventListener, Sensor, int)`"
        category="Greenness"
        priority="6"
        summary="Events should be kept temporarily before being delivered"
        explanation="The method registerListener(SensorEventListener, Sensor, int, int) allows eventsto be stored in the hardware queue (FIFO) up to maxReportLatencyUs. Setting maxReportLatencyUs to a positive value allows to reduce the number of interrupts the AP receives, hence reducing power consumption."
        url="https://developer.android.com/reference/android/hardware/SensorManager.html#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int,%20int)"
        urls="https://developer.android.com/reference/android/hardware/SensorManager.html#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int,%20int)"
        errorLine1="            sensorManager.registerListener(sensorListener,"
        errorLine2="            ^">
        <location
            file="C:\Github\randomix\app\src\main\java\com\minar\randomix\fragments\MagicBallFragment.java"
            line="38"
            column="13"/>
    </issue>

    <issue
        id="SensorCoalesce"
        severity="Warning"
        message="Should use `registerListener(SensorEventListener, Sensor, int, int)` instead of `registerListener(SensorEventListener, Sensor, int)`"
        category="Greenness"
        priority="6"
        summary="Events should be kept temporarily before being delivered"
        explanation="The method registerListener(SensorEventListener, Sensor, int, int) allows eventsto be stored in the hardware queue (FIFO) up to maxReportLatencyUs. Setting maxReportLatencyUs to a positive value allows to reduce the number of interrupts the AP receives, hence reducing power consumption."
        url="https://developer.android.com/reference/android/hardware/SensorManager.html#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int,%20int)"
        urls="https://developer.android.com/reference/android/hardware/SensorManager.html#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int,%20int)"
        errorLine1="            if (shakeEnabled) sensorManager.registerListener(sensorListener,"
        errorLine2="                              ^">
        <location
            file="C:\Github\randomix\app\src\main\java\com\minar\randomix\fragments\MagicBallFragment.java"
            line="159"
            column="31"/>
    </issue>

    <issue
        id="SensorCoalesce"
        severity="Warning"
        message="Should use `registerListener(SensorEventListener, Sensor, int, int)` instead of `registerListener(SensorEventListener, Sensor, int)`"
        category="Greenness"
        priority="6"
        summary="Events should be kept temporarily before being delivered"
        explanation="The method registerListener(SensorEventListener, Sensor, int, int) allows eventsto be stored in the hardware queue (FIFO) up to maxReportLatencyUs. Setting maxReportLatencyUs to a positive value allows to reduce the number of interrupts the AP receives, hence reducing power consumption."
        url="https://developer.android.com/reference/android/hardware/SensorManager.html#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int,%20int)"
        urls="https://developer.android.com/reference/android/hardware/SensorManager.html#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int,%20int)"
        errorLine1="            sensorManager.registerListener(sensorListener,"
        errorLine2="            ^">
        <location
            file="C:\Github\randomix\app\src\main\java\com\minar\randomix\fragments\RouletteFragment.java"
            line="61"
            column="13"/>
    </issue>

    <issue
        id="SensorCoalesce"
        severity="Warning"
        message="Should use `registerListener(SensorEventListener, Sensor, int, int)` instead of `registerListener(SensorEventListener, Sensor, int)`"
        category="Greenness"
        priority="6"
        summary="Events should be kept temporarily before being delivered"
        explanation="The method registerListener(SensorEventListener, Sensor, int, int) allows eventsto be stored in the hardware queue (FIFO) up to maxReportLatencyUs. Setting maxReportLatencyUs to a positive value allows to reduce the number of interrupts the AP receives, hence reducing power consumption."
        url="https://developer.android.com/reference/android/hardware/SensorManager.html#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int,%20int)"
        urls="https://developer.android.com/reference/android/hardware/SensorManager.html#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int,%20int)"
        errorLine1="            if (shakeEnabled) sensorManager.registerListener(sensorListener,"
        errorLine2="                              ^">
        <location
            file="C:\Github\randomix\app\src\main\java\com\minar\randomix\fragments\RouletteFragment.java"
            line="301"
            column="31"/>
    </issue>

</issues>
